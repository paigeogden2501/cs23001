//  String class test program
// 
//  Name:  test_lessThan.cpp
//  Tests: less than operator, >, >=, <=
//
 
#include "string.hpp"
#include <cassert>
#include <iostream> 

//===========================================================================
int main ()
{
    {
        std::cout << "Starting the tests of test_lessThan.cpp file: <, <=, >, >=." << std::endl;
        //------------------------------------------------------
        // testing less than = true
        String  left("0");
        String  right("1");

        // TEST
        bool result = (left < right);

        // VERIFY
        assert(result == true);
        assert(left   == "0");
        assert(right  == "1");
    }

    {
        //------------------------------------------------------
        // = false
        String  left("1");
        String  right("0");

        // TEST
        bool result = (left < right);

        // VERIFY
        assert(result == false);
        assert(left   == "1");
        assert(right  == "0");
    }

    {
        //------------------------------------------------------
        // ==; false
        String  left("223");
        String  right("223");

        // TEST
        bool result = (left < right);

        // VERIFY
        assert(result == false);
        assert(left   == "223");
        assert(right  == "223");
    }

    {
        //------------------------------------------------------
        // left == right; = false
        String  left("444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
        String  right("444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");

        // TEST
        bool result = (left < right);

        // VERIFY
        assert(result == false);
        assert(left   == "444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
        assert(right  == "444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
    }

    {
        //------------------------------------------------------
        // testing false near bounds
        String  left("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");
        String  right("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");

        // TEST
        bool result = (left < right);

        // VERIFY
        assert(result == false);
        assert(left   == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");
        assert(right  == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");
    }

    {
        //------------------------------------------------------
        // testing near bounds
        String  left("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");
        String  right("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");

        // TEST
        bool result = (left < right);

        // VERIFY
        assert(result == true);
        assert(left   == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");
        assert(right  == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");
    }
    

    // ADD ADDITIONAL TESTS AS NECESSARY
    
    std::cout << "Done testing less than operator." << std::endl;

    // ---------------------------------------------------------
    {
        //------------------------------------------------------
        // testing less than = true
        String  left("0");
        String  right("1");

        // TEST
        bool result = (left <= right);

        // VERIFY
        assert(result == true);
        assert(left   == "0");
        assert(right  == "1");
    }

    {
        //------------------------------------------------------
        // = false
        String  left("1");
        String  right("0");

        // TEST
        bool result = (left <= right);

        // VERIFY
        assert(result == false);
        assert(left   == "1");
        assert(right  == "0");
    }

    {
        //------------------------------------------------------
        // ==; false
        String  left("223");
        String  right("223");

        // TEST
        bool result = (left <= right);

        // VERIFY
        assert(result == true);
        assert(left   == "223");
        assert(right  == "223");
    }

    {
        //------------------------------------------------------
        // left == right; = false
        String  left("444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
        String  right("444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");

        // TEST
        bool result = (left <= right);

        // VERIFY
        assert(result == true);
        assert(left   == "444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
        assert(right  == "444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
    }

    {
        //------------------------------------------------------
        // testing false near bounds
        String  left("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");
        String  right("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");

        // TEST
        bool result = (left <= right);

        // VERIFY
        assert(result == false);
        assert(left   == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");
        assert(right  == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");
    }

    {
        //------------------------------------------------------
        // testing near bounds
        String  left("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");
        String  right("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");

        // TEST
        bool result = (left <= right);

        // VERIFY
        assert(result == true);
        assert(left   == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");
        assert(right  == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");
    }


    // ----------------------------------------------------------------------
    std::cout << "Done testing less than or equal to operator." << std::endl;
    {
        //------------------------------------------------------
        // testing less than = true
        String  left("0");
        String  right("1");

        // TEST
        bool result = (left > right);

        // VERIFY
        assert(result == false);
        assert(left   == "0");
        assert(right  == "1");
    }

    {
        //------------------------------------------------------
        // = false
        String  left("1");
        String  right("0");

        // TEST
        bool result = (left > right);

        // VERIFY
        assert(result == true);
        assert(left   == "1");
        assert(right  == "0");
    }

    {
        //------------------------------------------------------
        // ==; false
        String  left("223");
        String  right("223");

        // TEST
        bool result = (left > right);

        // VERIFY
        assert(result == false);
        assert(left   == "223");
        assert(right  == "223");
    }

    {
        //------------------------------------------------------
        // left > right; = true
        String  left("944444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
        String  right("444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");

        // TEST
        bool result = (left > right);

        // VERIFY
        assert(result == true);
        assert(left   == "944444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
        assert(right  == "444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
    }

    {
        //------------------------------------------------------
        // testing false near bounds
        String  left("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");
        String  right("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");

        // TEST
        bool result = (left > right);

        // VERIFY
        assert(result == true);
        assert(left   == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");
        assert(right  == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");
    }

    {
        //------------------------------------------------------
        // testing near bounds
        String  left("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");
        String  right("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");

        // TEST
        bool result = (right > left);

        // VERIFY
        assert(result == true);
        assert(left   == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");
        assert(right  == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");
    }



    // -------------------------------------------------------------
    std::cout << "Done testing greater than operator." << std::endl;
    {
        //------------------------------------------------------
        // testing less than = false
        String  left("0");
        String  right("1");

        // TEST
        bool result = (left >= right);

        // VERIFY
        assert(result == false);
        assert(left   == "0");
        assert(right  == "1");
    }

    {
        //------------------------------------------------------
        // = true
        String  left("1");
        String  right("0");

        // TEST
        bool result = (left >= right);

        // VERIFY
        assert(result == true);
        assert(left   == "1");
        assert(right  == "0");
    }

    {
        //------------------------------------------------------
        // ==; true
        String  left("223");
        String  right("223");

        // TEST
        bool result = (left >= right);

        // VERIFY
        assert(result == true);
        assert(left   == "223");
        assert(right  == "223");
    }

    {
        //------------------------------------------------------
        // left == right; = true
        String  left("444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
        String  right("444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");

        // TEST
        bool result = (left >= right);

        // VERIFY
        assert(result == true);
        assert(left   == "444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
        assert(right  == "444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
    }

    {
        //------------------------------------------------------
        // testing near bounds
        String  left("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");
        String  right("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");

        // TEST
        bool result = (left >= right);

        // VERIFY
        assert(result == true);
        assert(left   == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");
        assert(right  == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");
    }

    {
        //------------------------------------------------------
        // testing false near bounds
        String  left("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");
        String  right("88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");

        // TEST
        bool result = (left >= right);

        // VERIFY
        assert(result == false);
        assert(left   == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444432145");
        assert(right  == "88888888888889999999999999993333333333333333333333333337459274857023748988888888888888888888888888883333333333333333333333333333333333333337472898728347592738947246572734774444444444444444444444444444444444444444444444444444444444444444444444444444432145");
    }
    std::cout << "Done testing greater than or equal to operator." << std::endl;

    // -----------------------------------------------------------------------
    std::cout << "Completely done w the test_lessThan.cpp file." << std::endl;
    return 0;
}
