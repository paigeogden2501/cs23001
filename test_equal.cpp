//  String class test program
// 
//  Name:  XXX
//  Tests: XXX 
//
 
#include "string.hpp"
#include <cassert>
#include <iostream> 

//===========================================================================
int main ()
{
    {
        //------------------------------------------------------
        // SETUP FIXTURE
        String  left("1");
        String  right("1");

        // TEST
        String result = (left == right);

        // VERIFY
        assert(result == true);
        assert(left   == "1");
        assert(right  == "1");
    }

    {
        //------------------------------------------------------
        // SETUP FIXTURE
        String  left("123456789012345678901234567890");
        String  right("123456789012345678901234567890");

        // TEST
        String result = (left == right);

        // VERIFY
        assert(result == true);
        assert(left   == "123456789012345678901234567890");
        assert(right  == "123456789012345678901234567890");
    }

    {
        //------------------------------------------------------
        // SETUP FIXTURE
        String  left("9999999999999999999999333333333333333333333333333333333333342897827495704785628690237468278572834758923745");
        String  right("9999999999999999999999333333333333333333333333333333333333342897827495704785628690237468278572834758923745");

        // TEST
        String result = (left == right);

        // VERIFY
        assert(result == true);
        assert(left   == "9999999999999999999999333333333333333333333333333333333333342897827495704785628690237468278572834758923745");
        assert(right  == "9999999999999999999999333333333333333333333333333333333333342897827495704785628690237468278572834758923745");
    }

    {
        //------------------------------------------------------
        // testing bounds
        String  left("8888888888888999999999999999333333333333333333333333333745927485702374898888888888888888888888888888333333333333333333333333333333333333333747289872834759273894724657273477444444444444444444444444444444444444444444444444444444444444444444444444444444432145");
        String  right("8888888888888999999999999999333333333333333333333333333745927485702374898888888888888888888888888888333333333333333333333333333333333333333747289872834759273894724657273477444444444444444444444444444444444444444444444444444444444444444444444444444444432145");

        // TEST
        String result = (left == right);

        // VERIFY
        assert(result == true);
        assert(left   == "8888888888888999999999999999333333333333333333333333333745927485702374898888888888888888888888888888333333333333333333333333333333333333333747289872834759273894724657273477444444444444444444444444444444444444444444444444444444444444444444444444444444432145");
        assert(right  == "8888888888888999999999999999333333333333333333333333333745927485702374898888888888888888888888888888333333333333333333333333333333333333333747289872834759273894724657273477444444444444444444444444444444444444444444444444444444444444444444444444444444432145");
    }

    {
        //------------------------------------------------------
        // testing near bounds
        String  left("900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        String  right("900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");

        // TEST
        String result = (left == right);

        // VERIFY
        assert(result == true);
        assert(left   == "900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        assert(right  == "900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
    }

    {
        //------------------------------------------------------
        // testing near bounds
        String  left("222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222");
        String  right("222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222");

        // TEST
        String result = (left == right);

        // VERIFY
        assert(result == true);
        assert(left   == "222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222");
        assert(right  == "222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222");
    }
    {
        //------------------------------------------------------
        // testing not equal
        String  left("1");
        String  right("2");

        // TEST
        String result = (left == right);

        // VERIFY
        assert(result == false);
        assert(left   == "1");
        assert(right  == "2");
    }
    

    // ADD ADDITIONAL TESTS AS NECESSARY
    
    std::cout << "Done testing equal." << std::endl;
    return 0;
}
